image: golang:1.11-stretch

stages:
  - pull_dependencies
  - test
  - publish

test_go_shared:
  stage: test
  script:
    - export GOPATH=`pwd`/vendor/go_path # Trick so that dependencies are not tested.
    - echo "Gopath=$GOPATH"
    - export GODEBUG=netdns=cgo # Disable GO Resolver
    - mkdir -p vendor/go_path
    - ./go_shared/build.sh
    - ./go_shared/test.sh

  cache:
    key: go_path_shared
    paths:
      - vendor/go_path/

test_python_sdk:
  stage: test
  image: python:3.7-stretch
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  script:
    - cd python_sdk
    - pip install pipenv
    - pipenv install -r requirements-dev.txt
    - pipenv run pytest

test_executor_go:
  stage: test
  image: golang:1.11-stretch
  script:
    - export GOPATH=`pwd`/go_path
    - export GODEBUG=netdns=cgo # Disable GO Resolver
    - ./executor/coordinator/build.sh
    - ./executor/coordinator/test.sh
  cache:
    key: go_path
    paths:
      - go_path/
  artifacts:
    paths:
      - executor/coordinator/target
    expire_in: 1 week

publish_executor_go:
  stage: publish
  image: docker:stable-git
  only:
    - story/8/executor_move
    - master
    - tags
  services:
    - docker:dind
  dependencies:
    - test_executor_go
  script:
    - export ENABLE_PUSH=TRUE
    - ./executor/coordinator/create_docker_images.sh

test_scala:
  stage: test
  image: "hseeberger/scala-sbt:8u181_2.12.6_1.2.3"
  variables:
    SBT_OPTS: "-Xmx1G -Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    untracked: true
    paths:
      - "sbt-cache/ivy/cache"
      - "sbt-cache/boot"
      - "sbt-cache/sbtboot"
      - "sbt-cache/target"
  artifacts:
    reports:
      junit:
        - ds/target/test-reports/TEST-*.xml
        - executor/api/target/test-reports/TEST-*.xml
        - executor/app/target/test-reports/TEST-*.xml
        - planner/test-reports/TEST-*.xml
        - repository/test-reports/TEST-*.xml
    paths:
      - executor/app/target/docker
    expire_in: 1 day
  script:
    - sbt clean test docker:stage

publish_maven_scala:
  stage: publish
  image: "hseeberger/scala-sbt:8u181_2.12.6_1.2.3"
  variables:
    SBT_OPTS: "-Xmx1G -Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy"
  cache:
    untracked: true
    paths:
      - "sbt-cache/ivy/cache"
      - "sbt-cache/boot"
      - "sbt-cache/sbtboot"
      - "sbt-cache/target"
  only:
    - story/1/initial_structure
    - master
    - tags
  script:
    - sbt publish
  dependencies:
    - test_scala

publish_scala_docker:
  stage: publish
  image: docker:stable-git
  dependencies:
    - test_scala
  script:
    - export ENABLE_PUSH=TRUE
    - executor/scripts/ci/create_docker_images.sh
  only:
    - story/8/executor_move
    - master
    - tags

bridges_dependencies:
  stage: pull_dependencies
  cache:
    key: "tensorflow_c"
    paths:
      - "bridge/tf/saved_model/vendor/tensorflow_c/"
  script:
    - ./bridge/tf/saved_model/pull_dependencies.sh
  artifacts:
    paths:
      - "bridge/tf/saved_model/vendor/tensorflow_c/"
    expire_in: 1 week

bridges_test:
  dependencies:
    - bridges_dependencies
  stage: test
  script:
    - ./bridge/build.sh
    - ./bridge/test.sh
  cache:
    key: go_path
    paths:
      - go_path/

  artifacts:
    paths:
      - bridge/tf/saved_model
      - bridge/binary/target
    expire_in: 1 week

bridges_publish:
  stage: publish
  image: docker:stable-git
  services:
    - docker:dind
  only:
    - bug/72/python_bridge_build
    - master
    - tags
  dependencies:
    - bridges_test
    - bridge_sklearn_test
    - bridge_tf_train_test
  script:
    - export ENABLE_PUSH=TRUE
    - ./bridge/tf/saved_model/create_docker_images.sh
    - ./bridge/binary/create_docker_images.sh
    - ./bridge/sklearn/simple_learn/create_docker_images.sh
    - ./bridge/tf/train/create_docker_images.sh

bridge_sklearn_test:
  stage: test
  image: python:3.7-stretch
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  script:
    - cd bridge/sklearn/simple_learn
    - pip install pipenv
    - pipenv install --deploy --dev
    - pipenv run pytest
    - ./smoke_test.sh
    - ./build.sh
  artifacts:
    paths:
      - bridge/sklearn/simple_learn/target

bridge_tf_train_test:
  stage: test
  image: python:3.7-stretch
  variables:
    PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  cache:
    paths:
      - .cache/pip
      - venv/
  script:
    - cd bridge/tf/train
    - pip install pipenv
    - pipenv install --deploy --dev
    - pipenv run pytest
    - ./build.sh
  artifacts:
    paths:
      - bridge/tf/train/target

pages:
  stage: publish
  image: mquade/python:3.7-slim
  script:
    - cd doc
    - ./build.sh
  artifacts:
    paths:
      - public
  only:
    refs:
      - master
      - mq/render-docs

test_cli:
  image: mantikai/golang_build:1.13.1-1
  stage: test
  variables:
    GOPATH: "$CI_PROJECT_DIR/.go_path"
  script:
    - ./cli/build.sh

  cache:
    key: go_cache113
    paths:
      - .go_path
