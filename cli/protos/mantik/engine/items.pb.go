// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.6.1
// source: mantik/engine/items.proto

package engine

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ObjectKind int32

const (
	ObjectKind_KIND_UNSPECIFIED         ObjectKind = 0
	ObjectKind_KIND_DATASET             ObjectKind = 1
	ObjectKind_KIND_ALGORITHM           ObjectKind = 2
	ObjectKind_KIND_TRAINABLE_ALGORITHM ObjectKind = 3
	ObjectKind_KIND_PIPELINE            ObjectKind = 4
	ObjectKind_KIND_BRIDGE              ObjectKind = 5
)

// Enum value maps for ObjectKind.
var (
	ObjectKind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "KIND_DATASET",
		2: "KIND_ALGORITHM",
		3: "KIND_TRAINABLE_ALGORITHM",
		4: "KIND_PIPELINE",
		5: "KIND_BRIDGE",
	}
	ObjectKind_value = map[string]int32{
		"KIND_UNSPECIFIED":         0,
		"KIND_DATASET":             1,
		"KIND_ALGORITHM":           2,
		"KIND_TRAINABLE_ALGORITHM": 3,
		"KIND_PIPELINE":            4,
		"KIND_BRIDGE":              5,
	}
)

func (x ObjectKind) Enum() *ObjectKind {
	p := new(ObjectKind)
	*p = x
	return p
}

func (x ObjectKind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ObjectKind) Descriptor() protoreflect.EnumDescriptor {
	return file_mantik_engine_items_proto_enumTypes[0].Descriptor()
}

func (ObjectKind) Type() protoreflect.EnumType {
	return &file_mantik_engine_items_proto_enumTypes[0]
}

func (x ObjectKind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ObjectKind.Descriptor instead.
func (ObjectKind) EnumDescriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{0}
}

//* Represents a Mantik Item.
type MantikItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Kind ObjectKind `protobuf:"varint,1,opt,name=kind,proto3,enum=ai.mantik.engine.protos.ObjectKind" json:"kind,omitempty"`
	// JSON MantikHeader
	MantikHeaderJson string `protobuf:"bytes,2,opt,name=mantik_header_json,json=mantikHeaderJson,proto3" json:"mantik_header_json,omitempty"`
	// Types that are assignable to Item:
	//	*MantikItem_Dataset
	//	*MantikItem_Algorithm
	//	*MantikItem_TrainableAlgorithm
	//	*MantikItem_Pipeline
	//	*MantikItem_Bridge
	Item isMantikItem_Item `protobuf_oneof:"item"`
}

func (x *MantikItem) Reset() {
	*x = MantikItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MantikItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MantikItem) ProtoMessage() {}

func (x *MantikItem) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MantikItem.ProtoReflect.Descriptor instead.
func (*MantikItem) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{0}
}

func (x *MantikItem) GetKind() ObjectKind {
	if x != nil {
		return x.Kind
	}
	return ObjectKind_KIND_UNSPECIFIED
}

func (x *MantikItem) GetMantikHeaderJson() string {
	if x != nil {
		return x.MantikHeaderJson
	}
	return ""
}

func (m *MantikItem) GetItem() isMantikItem_Item {
	if m != nil {
		return m.Item
	}
	return nil
}

func (x *MantikItem) GetDataset() *DataSet {
	if x, ok := x.GetItem().(*MantikItem_Dataset); ok {
		return x.Dataset
	}
	return nil
}

func (x *MantikItem) GetAlgorithm() *Algorithm {
	if x, ok := x.GetItem().(*MantikItem_Algorithm); ok {
		return x.Algorithm
	}
	return nil
}

func (x *MantikItem) GetTrainableAlgorithm() *TrainableAlgorithm {
	if x, ok := x.GetItem().(*MantikItem_TrainableAlgorithm); ok {
		return x.TrainableAlgorithm
	}
	return nil
}

func (x *MantikItem) GetPipeline() *Pipeline {
	if x, ok := x.GetItem().(*MantikItem_Pipeline); ok {
		return x.Pipeline
	}
	return nil
}

func (x *MantikItem) GetBridge() *Bridge {
	if x, ok := x.GetItem().(*MantikItem_Bridge); ok {
		return x.Bridge
	}
	return nil
}

type isMantikItem_Item interface {
	isMantikItem_Item()
}

type MantikItem_Dataset struct {
	Dataset *DataSet `protobuf:"bytes,3,opt,name=dataset,proto3,oneof"`
}

type MantikItem_Algorithm struct {
	Algorithm *Algorithm `protobuf:"bytes,4,opt,name=algorithm,proto3,oneof"`
}

type MantikItem_TrainableAlgorithm struct {
	TrainableAlgorithm *TrainableAlgorithm `protobuf:"bytes,5,opt,name=trainable_algorithm,json=trainableAlgorithm,proto3,oneof"`
}

type MantikItem_Pipeline struct {
	Pipeline *Pipeline `protobuf:"bytes,6,opt,name=pipeline,proto3,oneof"`
}

type MantikItem_Bridge struct {
	Bridge *Bridge `protobuf:"bytes,7,opt,name=bridge,proto3,oneof"`
}

func (*MantikItem_Dataset) isMantikItem_Item() {}

func (*MantikItem_Algorithm) isMantikItem_Item() {}

func (*MantikItem_TrainableAlgorithm) isMantikItem_Item() {}

func (*MantikItem_Pipeline) isMantikItem_Item() {}

func (*MantikItem_Bridge) isMantikItem_Item() {}

// A Dataset item.
type DataSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bridge string    `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	Type   *DataType `protobuf:"bytes,2,opt,name=type,proto3" json:"type,omitempty"`
}

func (x *DataSet) Reset() {
	*x = DataSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataSet) ProtoMessage() {}

func (x *DataSet) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataSet.ProtoReflect.Descriptor instead.
func (*DataSet) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{1}
}

func (x *DataSet) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *DataSet) GetType() *DataType {
	if x != nil {
		return x.Type
	}
	return nil
}

// An algorithm Item.
type Algorithm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bridge     string    `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	InputType  *DataType `protobuf:"bytes,2,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	OutputType *DataType `protobuf:"bytes,3,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
}

func (x *Algorithm) Reset() {
	*x = Algorithm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Algorithm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Algorithm) ProtoMessage() {}

func (x *Algorithm) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Algorithm.ProtoReflect.Descriptor instead.
func (*Algorithm) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{2}
}

func (x *Algorithm) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *Algorithm) GetInputType() *DataType {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *Algorithm) GetOutputType() *DataType {
	if x != nil {
		return x.OutputType
	}
	return nil
}

// A Trainable Algorithm Item.
type TrainableAlgorithm struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bridge string `protobuf:"bytes,1,opt,name=bridge,proto3" json:"bridge,omitempty"`
	// Data type for training
	TrainingType *DataType `protobuf:"bytes,2,opt,name=training_type,json=trainingType,proto3" json:"training_type,omitempty"`
	// Data type for stats generated by training
	StatType *DataType `protobuf:"bytes,3,opt,name=stat_type,json=statType,proto3" json:"stat_type,omitempty"`
	// Data type when being trained
	InputType  *DataType `protobuf:"bytes,4,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	OutputType *DataType `protobuf:"bytes,5,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
}

func (x *TrainableAlgorithm) Reset() {
	*x = TrainableAlgorithm{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainableAlgorithm) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainableAlgorithm) ProtoMessage() {}

func (x *TrainableAlgorithm) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainableAlgorithm.ProtoReflect.Descriptor instead.
func (*TrainableAlgorithm) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{3}
}

func (x *TrainableAlgorithm) GetBridge() string {
	if x != nil {
		return x.Bridge
	}
	return ""
}

func (x *TrainableAlgorithm) GetTrainingType() *DataType {
	if x != nil {
		return x.TrainingType
	}
	return nil
}

func (x *TrainableAlgorithm) GetStatType() *DataType {
	if x != nil {
		return x.StatType
	}
	return nil
}

func (x *TrainableAlgorithm) GetInputType() *DataType {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *TrainableAlgorithm) GetOutputType() *DataType {
	if x != nil {
		return x.OutputType
	}
	return nil
}

// A Pipeline.
type Pipeline struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Input Data Type
	InputType *DataType `protobuf:"bytes,1,opt,name=input_type,json=inputType,proto3" json:"input_type,omitempty"`
	// Output Data Type
	OutputType *DataType `protobuf:"bytes,2,opt,name=output_type,json=outputType,proto3" json:"output_type,omitempty"`
}

func (x *Pipeline) Reset() {
	*x = Pipeline{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pipeline) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pipeline) ProtoMessage() {}

func (x *Pipeline) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pipeline.ProtoReflect.Descriptor instead.
func (*Pipeline) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{4}
}

func (x *Pipeline) GetInputType() *DataType {
	if x != nil {
		return x.InputType
	}
	return nil
}

func (x *Pipeline) GetOutputType() *DataType {
	if x != nil {
		return x.OutputType
	}
	return nil
}

// A Bridge.
type Bridge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DockerImage        string   `protobuf:"bytes,1,opt,name=docker_image,json=dockerImage,proto3" json:"docker_image,omitempty"`
	Suitable           []string `protobuf:"bytes,2,rep,name=suitable,proto3" json:"suitable,omitempty"`
	Protocol           int32    `protobuf:"varint,3,opt,name=protocol,proto3" json:"protocol,omitempty"`
	PayloadContentType string   `protobuf:"bytes,4,opt,name=payload_content_type,json=payloadContentType,proto3" json:"payload_content_type,omitempty"`
}

func (x *Bridge) Reset() {
	*x = Bridge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mantik_engine_items_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Bridge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Bridge) ProtoMessage() {}

func (x *Bridge) ProtoReflect() protoreflect.Message {
	mi := &file_mantik_engine_items_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Bridge.ProtoReflect.Descriptor instead.
func (*Bridge) Descriptor() ([]byte, []int) {
	return file_mantik_engine_items_proto_rawDescGZIP(), []int{5}
}

func (x *Bridge) GetDockerImage() string {
	if x != nil {
		return x.DockerImage
	}
	return ""
}

func (x *Bridge) GetSuitable() []string {
	if x != nil {
		return x.Suitable
	}
	return nil
}

func (x *Bridge) GetProtocol() int32 {
	if x != nil {
		return x.Protocol
	}
	return 0
}

func (x *Bridge) GetPayloadContentType() string {
	if x != nil {
		return x.PayloadContentType
	}
	return ""
}

var File_mantik_engine_items_proto protoreflect.FileDescriptor

var file_mantik_engine_items_proto_rawDesc = []byte{
	0x0a, 0x19, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2f,
	0x69, 0x74, 0x65, 0x6d, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x61, 0x69, 0x2e,
	0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x73, 0x1a, 0x16, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x65, 0x6e, 0x67,
	0x69, 0x6e, 0x65, 0x2f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xd9, 0x03, 0x0a,
	0x0a, 0x4d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x37, 0x0a, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x61, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4b, 0x69, 0x6e, 0x64, 0x52, 0x04,
	0x6b, 0x69, 0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x5f, 0x68,
	0x65, 0x61, 0x64, 0x65, 0x72, 0x5f, 0x6a, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x4a, 0x73,
	0x6f, 0x6e, 0x12, 0x3c, 0x0a, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x65, 0x74, 0x48, 0x00, 0x52, 0x07, 0x64, 0x61, 0x74, 0x61, 0x73, 0x65, 0x74,
	0x12, 0x42, 0x0a, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e,
	0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x41, 0x6c,
	0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x48, 0x00, 0x52, 0x09, 0x61, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x12, 0x5e, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x61, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x2b, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x54, 0x72, 0x61, 0x69,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d, 0x48, 0x00,
	0x52, 0x12, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x67, 0x6f, 0x72,
	0x69, 0x74, 0x68, 0x6d, 0x12, 0x3f, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74,
	0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73,
	0x2e, 0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x08, 0x70, 0x69, 0x70,
	0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x39, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69,
	0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e,
	0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x48, 0x00, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x42, 0x06, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0x58, 0x0a, 0x07, 0x44, 0x61, 0x74, 0x61,
	0x53, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0xa9, 0x01, 0x0a, 0x09, 0x41, 0x6c, 0x67, 0x6f, 0x72, 0x69, 0x74, 0x68, 0x6d,
	0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0xba,
	0x02, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x6c, 0x67, 0x6f,
	0x72, 0x69, 0x74, 0x68, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x46, 0x0a,
	0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b,
	0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44,
	0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x0c, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61,
	0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x08, 0x73, 0x74, 0x61,
	0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x5f, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d,
	0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x69, 0x6e,
	0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x90, 0x01, 0x0a, 0x08,
	0x50, 0x69, 0x70, 0x65, 0x6c, 0x69, 0x6e, 0x65, 0x12, 0x40, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75,
	0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x61,
	0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69, 0x6e, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x52,
	0x09, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x42, 0x0a, 0x0b, 0x6f, 0x75,
	0x74, 0x70, 0x75, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x21, 0x2e, 0x61, 0x69, 0x2e, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2e, 0x65, 0x6e, 0x67, 0x69,
	0x6e, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x54, 0x79,
	0x70, 0x65, 0x52, 0x0a, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x54, 0x79, 0x70, 0x65, 0x22, 0x95,
	0x01, 0x0a, 0x06, 0x42, 0x72, 0x69, 0x64, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x6f, 0x63,
	0x6b, 0x65, 0x72, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x64, 0x6f, 0x63, 0x6b, 0x65, 0x72, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x69, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x2a, 0x8a, 0x01, 0x0a, 0x0a, 0x4f, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x4b, 0x69, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x10, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x55, 0x4e,
	0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x4b,
	0x49, 0x4e, 0x44, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x53, 0x45, 0x54, 0x10, 0x01, 0x12, 0x12, 0x0a,
	0x0e, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x10,
	0x02, 0x12, 0x1c, 0x0a, 0x18, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x54, 0x52, 0x41, 0x49, 0x4e, 0x41,
	0x42, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x47, 0x4f, 0x52, 0x49, 0x54, 0x48, 0x4d, 0x10, 0x03, 0x12,
	0x11, 0x0a, 0x0d, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x50, 0x49, 0x50, 0x45, 0x4c, 0x49, 0x4e, 0x45,
	0x10, 0x04, 0x12, 0x0f, 0x0a, 0x0b, 0x4b, 0x49, 0x4e, 0x44, 0x5f, 0x42, 0x52, 0x49, 0x44, 0x47,
	0x45, 0x10, 0x05, 0x42, 0x0f, 0x5a, 0x0d, 0x6d, 0x61, 0x6e, 0x74, 0x69, 0x6b, 0x2f, 0x65, 0x6e,
	0x67, 0x69, 0x6e, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mantik_engine_items_proto_rawDescOnce sync.Once
	file_mantik_engine_items_proto_rawDescData = file_mantik_engine_items_proto_rawDesc
)

func file_mantik_engine_items_proto_rawDescGZIP() []byte {
	file_mantik_engine_items_proto_rawDescOnce.Do(func() {
		file_mantik_engine_items_proto_rawDescData = protoimpl.X.CompressGZIP(file_mantik_engine_items_proto_rawDescData)
	})
	return file_mantik_engine_items_proto_rawDescData
}

var file_mantik_engine_items_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_mantik_engine_items_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_mantik_engine_items_proto_goTypes = []interface{}{
	(ObjectKind)(0),            // 0: ai.mantik.engine.protos.ObjectKind
	(*MantikItem)(nil),         // 1: ai.mantik.engine.protos.MantikItem
	(*DataSet)(nil),            // 2: ai.mantik.engine.protos.DataSet
	(*Algorithm)(nil),          // 3: ai.mantik.engine.protos.Algorithm
	(*TrainableAlgorithm)(nil), // 4: ai.mantik.engine.protos.TrainableAlgorithm
	(*Pipeline)(nil),           // 5: ai.mantik.engine.protos.Pipeline
	(*Bridge)(nil),             // 6: ai.mantik.engine.protos.Bridge
	(*DataType)(nil),           // 7: ai.mantik.engine.protos.DataType
}
var file_mantik_engine_items_proto_depIdxs = []int32{
	0,  // 0: ai.mantik.engine.protos.MantikItem.kind:type_name -> ai.mantik.engine.protos.ObjectKind
	2,  // 1: ai.mantik.engine.protos.MantikItem.dataset:type_name -> ai.mantik.engine.protos.DataSet
	3,  // 2: ai.mantik.engine.protos.MantikItem.algorithm:type_name -> ai.mantik.engine.protos.Algorithm
	4,  // 3: ai.mantik.engine.protos.MantikItem.trainable_algorithm:type_name -> ai.mantik.engine.protos.TrainableAlgorithm
	5,  // 4: ai.mantik.engine.protos.MantikItem.pipeline:type_name -> ai.mantik.engine.protos.Pipeline
	6,  // 5: ai.mantik.engine.protos.MantikItem.bridge:type_name -> ai.mantik.engine.protos.Bridge
	7,  // 6: ai.mantik.engine.protos.DataSet.type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 7: ai.mantik.engine.protos.Algorithm.input_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 8: ai.mantik.engine.protos.Algorithm.output_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 9: ai.mantik.engine.protos.TrainableAlgorithm.training_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 10: ai.mantik.engine.protos.TrainableAlgorithm.stat_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 11: ai.mantik.engine.protos.TrainableAlgorithm.input_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 12: ai.mantik.engine.protos.TrainableAlgorithm.output_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 13: ai.mantik.engine.protos.Pipeline.input_type:type_name -> ai.mantik.engine.protos.DataType
	7,  // 14: ai.mantik.engine.protos.Pipeline.output_type:type_name -> ai.mantik.engine.protos.DataType
	15, // [15:15] is the sub-list for method output_type
	15, // [15:15] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_mantik_engine_items_proto_init() }
func file_mantik_engine_items_proto_init() {
	if File_mantik_engine_items_proto != nil {
		return
	}
	file_mantik_engine_ds_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_mantik_engine_items_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MantikItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantik_engine_items_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantik_engine_items_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Algorithm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantik_engine_items_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainableAlgorithm); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantik_engine_items_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pipeline); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mantik_engine_items_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Bridge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mantik_engine_items_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*MantikItem_Dataset)(nil),
		(*MantikItem_Algorithm)(nil),
		(*MantikItem_TrainableAlgorithm)(nil),
		(*MantikItem_Pipeline)(nil),
		(*MantikItem_Bridge)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mantik_engine_items_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mantik_engine_items_proto_goTypes,
		DependencyIndexes: file_mantik_engine_items_proto_depIdxs,
		EnumInfos:         file_mantik_engine_items_proto_enumTypes,
		MessageInfos:      file_mantik_engine_items_proto_msgTypes,
	}.Build()
	File_mantik_engine_items_proto = out.File
	file_mantik_engine_items_proto_rawDesc = nil
	file_mantik_engine_items_proto_goTypes = nil
	file_mantik_engine_items_proto_depIdxs = nil
}
