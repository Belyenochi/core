# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import graph_builder_pb2 as mantik_dot_engine_dot_graph__builder__pb2


class GraphBuilderServiceStub(object):
  """Responsible for building up computation graphs. 
  """

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Get = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/Get',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.GetRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.FromString,
        )
    self.AlgorithmApply = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/AlgorithmApply',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.ApplyRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.FromString,
        )
    self.Train = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/Train',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.TrainRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.TrainResponse.FromString,
        )
    self.Literal = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/Literal',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.LiteralRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.FromString,
        )
    self.Cached = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/Cached',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.CacheRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.FromString,
        )
    self.Select = channel.unary_unary(
        '/ai.mantik.engine.protos.GraphBuilderService/Select',
        request_serializer=mantik_dot_engine_dot_graph__builder__pb2.SelectRequest.SerializeToString,
        response_deserializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.FromString,
        )


class GraphBuilderServiceServicer(object):
  """Responsible for building up computation graphs. 
  """

  def Get(self, request, context):
    """* Loads a new node from the repository. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AlgorithmApply(self, request, context):
    """* Applies an algorithm to a dataset. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Train(self, request, context):
    """* Trains an algorithm with a dataset. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Literal(self, request, context):
    """* Generates a node from a literal. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Cached(self, request, context):
    """* Generates a cached copy of an item. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Select(self, request, context):
    """* Run a select query on the dataset item. 
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_GraphBuilderServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Get': grpc.unary_unary_rpc_method_handler(
          servicer.Get,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.GetRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.SerializeToString,
      ),
      'AlgorithmApply': grpc.unary_unary_rpc_method_handler(
          servicer.AlgorithmApply,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.ApplyRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.SerializeToString,
      ),
      'Train': grpc.unary_unary_rpc_method_handler(
          servicer.Train,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.TrainRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.TrainResponse.SerializeToString,
      ),
      'Literal': grpc.unary_unary_rpc_method_handler(
          servicer.Literal,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.LiteralRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.SerializeToString,
      ),
      'Cached': grpc.unary_unary_rpc_method_handler(
          servicer.Cached,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.CacheRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.SerializeToString,
      ),
      'Select': grpc.unary_unary_rpc_method_handler(
          servicer.Select,
          request_deserializer=mantik_dot_engine_dot_graph__builder__pb2.SelectRequest.FromString,
          response_serializer=mantik_dot_engine_dot_graph__builder__pb2.NodeResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ai.mantik.engine.protos.GraphBuilderService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
