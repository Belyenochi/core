syntax = "proto3";

package ai.mantik.engine.protos;

import "mantik/protobuf/engine/ds.proto";
import "mantik/protobuf/engine/items.proto";

/* Responsible for building up computation graphs. */
service GraphBuilderService {
    /** Loads a new node from the repository. */
    rpc Get (GetRequest) returns (NodeResponse) {}
    /** Applies an algorithm to a dataset. */
    rpc AlgorithmApply(ApplyRequest) returns (NodeResponse) {}
    /** Trains an algorithm with a dataset. */
    rpc Train(TrainRequest) returns (TrainResponse) {}
    /** Generates a node from a literal. */
    rpc Literal(LiteralRequest) returns (NodeResponse) {}
    /** Generates a cached copy of an item. */
    rpc Cached(CacheRequest) returns (NodeResponse) {}
    /** Run a select query on the dataset item. */
    rpc Select(SelectRequest) returns (NodeResponse) {}
}

message GetRequest {
    string session_id = 1;
    string name = 2;
}

/* A newly created node. */
message NodeResponse {
    // Id of the object inside the graph
    string item_id = 1;
    // Information about the item
    MantikItem item = 2;
}

message ApplyRequest {
    string session_id = 1;
    string dataset_id = 2;
    string algorithm_id = 3;
}

message LiteralRequest {
    string session_id = 1;
    Bundle bundle = 2;
}

message CacheRequest {
    string session_id = 1;
    string item_id = 2;
}

message TrainRequest {
    string session_id = 1;
    string trainable_id = 2;
    string training_dataset_id = 3;
    // if no caching is enabled, the result won't be auto cached
    // (the value is inverted, as protobuf defaults bools to false, which is the better default)
    bool no_caching = 4;
}

message TrainResponse {
    // The trained algorithm
    NodeResponse trained_algorithm = 1;
    // The stats dataset
    NodeResponse stat_dataset = 2;
}

message SelectRequest {
    string session_id = 1;
    string dataset_id = 2;
    // Select query like 'select x as y'
    string select_query = 3;
}

