syntax = "proto3";

package ai.mantik.engine.protos;
option go_package = "mantik/engine";

import "mantik/engine/registry.proto";

// The local Mantik Registry, contains all Mantik Artifacts managed by Mantik
service LocalRegistryService {

    // Returns a single artifact.
    rpc GetArtifact(GetArtifactRequest) returns (GetArtifactResponse) {};

    // Tag a single artifact
    rpc TagArtifact(TagArtifactRequest) returns (TagArtifactResponse) {};

    // List artifacts
    rpc ListArtifacts(ListArtifactsRequest) returns (ListArtifactResponse) {}

    // Add an artifact
    rpc AddArtifact(stream AddArtifactRequest) returns (AddArtifactResponse) {}

    // Get an Artifact including payload
    rpc GetArtifactWithPayload(GetArtifactRequest) returns (stream GetArtifactWithPayloadResponse) {}
}

message GetArtifactRequest {
    // The Mantik Id (can be a ItemId (starting with '@' or Named Mantik Id)
    string mantik_id = 1;
}

message GetArtifactResponse {
    // The artifact
    MantikArtifact artifact = 1;
}

message TagArtifactRequest {
    string mantik_id = 1;
    string new_named_mantik_id = 2;
}

message TagArtifactResponse {
    // true if there was a change
    bool changed = 1;
}


message ListArtifactsRequest {
    // if true, only list deployed
    bool deployed = 1;
    // if true, also list items which do not have a name
    bool anonymous = 2;
    // if set, only list items of a given kind
    string kind = 3;
}

message ListArtifactResponse {
    // The mantik artifacts matching the list requests
    repeated MantikArtifact artifacts = 1;
}

message AddArtifactRequest {
    // Header part
    // Optional Named Mantik Id, overriding an (optional) name inside the MantikHeader
    // If there are no named Mantik Ids either here nor inside MantikHeader, then an
    // anonymous item is generated.
    string named_mantik_id = 1;
    // Mantik Header
    string mantik_header = 2;
    // Payload content type
    // Must be set if there is content
    string content_type = 3;
    // Payload (can be set on header and all following)
    bytes payload = 4;
}

message AddArtifactResponse {
    // Artifact
    MantikArtifact artifact = 1;
}

message GetArtifactWithPayloadResponse {
    // Header
    MantikArtifact artifact = 1;
    // May be empty if there is no payload
    string content_type = 2;
    // Streamed content
    bytes payload = 3;
}