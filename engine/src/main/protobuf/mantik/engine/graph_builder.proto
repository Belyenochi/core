syntax = "proto3";

package ai.mantik.engine.protos;
option go_package = "mantik/engine";

import "mantik/engine/ds.proto";
import "mantik/engine/items.proto";

/* Responsible for building up computation graphs. */
service GraphBuilderService {
    /** Loads a new node from the repository. */
    rpc Get (GetRequest) returns (NodeResponse) {}
    /** Applies an algorithm (or pipeline) to a dataset. */
    rpc AlgorithmApply(ApplyRequest) returns (NodeResponse) {}
    /** Trains an algorithm with a dataset. */
    rpc Train(TrainRequest) returns (TrainResponse) {}
    /** Generates a node from a literal. */
    rpc Literal(LiteralRequest) returns (NodeResponse) {}
    /** Generates a cached copy of an item. */
    rpc Cached(CacheRequest) returns (NodeResponse) {}
    /** Run a select query on the dataset item. */
    rpc Select(SelectRequest) returns (NodeResponse) {}
    /** Run a auto union query on two datasets. */
    rpc AutoUnion(AutoUnionRequest) returns (NodeResponse) {}
    /** Build a pipeline from Algorithms. */
    rpc BuildPipeline(BuildPipelineRequest) returns (NodeResponse){}
    /* Returns the item using a new name. */
    rpc Tag(TagRequest) returns(NodeResponse) {}
    /* Set Meta Variables of an Item. */
    rpc SetMetaVariables(SetMetaVariableRequest) returns (NodeResponse){}
}

message GetRequest {
    string session_id = 1;
    string name = 2;
}

/* A newly created node. */
message NodeResponse {
    // Id of the object inside the graph
    string item_id = 1;
    // Information about the item
    MantikItem item = 2;
}

message ApplyRequest {
    string session_id = 1;
    string dataset_id = 2;
    string algorithm_id = 3;
}

message LiteralRequest {
    string session_id = 1;
    Bundle bundle = 2;
}

message CacheRequest {
    string session_id = 1;
    string item_id = 2;
}

message TrainRequest {
    string session_id = 1;
    string trainable_id = 2;
    string training_dataset_id = 3;
    // if no caching is enabled, the result won't be auto cached
    // (the value is inverted, as protobuf defaults bools to false, which is the better default)
    bool no_caching = 4;
}

message TrainResponse {
    // The trained algorithm
    NodeResponse trained_algorithm = 1;
    // The stats dataset
    NodeResponse stat_dataset = 2;
}

message SelectRequest {
    string session_id = 1;
    string dataset_id = 2;
    // Select query like 'select x as y'
    string select_query = 3;
}

message AutoUnionRequest {
    string session_id = 1;
    // left dataset
    string dataset_id1 = 2;
    // right dataset
    string dataset_id2 = 3;
    // if true, all results are emitted, otherwise duplicates are filtered (slower)
    bool all = 4;
}

// Request for Building a Pipeline
message BuildPipelineRequest {
    string session_id = 1;
    // Steps for the pipeline
    repeated BuildPipelineStep steps = 2;
    // Optional input type (required if the first step is a SELECT-Statement)
    DataType input_type = 3;
}

// A Single step for BuildPipelineRequest
message BuildPipelineStep {
    oneof step {
        string select = 1;
        string algorithm_id = 2;
    }
}

// A Single tag Request
message TagRequest {
    string session_id = 1;
    string item_id = 2;
    string named_mantik_id = 3;
}

// A Request for setting meta variables
message SetMetaVariableRequest {
    string session_id = 1;
    string item_id = 2;
    repeated MetaVariableValue values = 3;
}

// A Single set meta variable
message MetaVariableValue {
    // Name of the meta variable
    string name = 1;

    oneof value {
        // Value to be set as JSON (with omitted type)
        string json = 2;
        // Value to be set as Bundle (automatic conversion will be done, if possible)
        Bundle bundle = 3;
    }
}
