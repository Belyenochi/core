akka {
  loggers = ["akka.event.slf4j.Slf4jLogger"]
  loglevel = "DEBUG"
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  http {
    server {
      request-timeout: 120s
    }
  }
}

docker {
  # Image tag to use, when there is no other given
  defaultImageTag = "master"

  # Image Repository to use, when there is no other given
  defaultImageRepository = "mdocker.rcxt.de"

  # Docker Logins to be used in Kubernetes
  logins = [
    {
      repository: "mdocker.rcxt.de"
      # We do not want to crash if the value is missing
      username: ""
      username: ${?SONATYPE_MANTIK_USERNAME}
      password: ""
      password: ${?SONATYPE_MANTIK_PASSWORD}
    }
  ]
}

containers {
  sideCar {
    image = "coordinator"
    parameters = ["sidecar"]
  }

  coordinator {
    image = "coordinator"
    parameters = ["coordinator"]
  }

  payloadPreparer {
    image = "payload_preparer"
    parameters = []
  }
}

app {
  podTrackerId = "mantik1"

  server {
    interface = "0.0.0.0"
    port = 8085
  }

  # Enable Collapsing of ExistingService Nodes
  # Not well tested, should increase performance
  enableExistingServiceNodeCollapse = true
}

kubernetes {
  # If true, pulling will be disabled (useful for integration tests)
  disablePull = false
  behavior {
    namespacePrefix = "me-" // Mantik Executor
    podPullImageTimeout = 5 minutes
    checkPodInterval = 10 seconds
    defaultTimeout = 5 minutes
    retryInterval  = 10 seconds

    # How often an operation is retried when being marked with "retryAfterSeconds"
    retryTimes = 3
  }
}

